let MeltingOres = [["native_gold","gold"], ["native_copper","copper"], ["native_silver","silver"], ["hematite","cast_iron"], ["cassiterite","tin"], ["bismuthinite","bismuth"], ["garnierite","nickel"], ["malachite","copper"], ["magnetite","cast_iron"], ["limonite","cast_iron"], ["sphalerite","zinc"], ["tetrahedrite","copper"]]

MMEvents.createProcesses(event => {

    // Electrolyzer
    event.create("mm:electrolyze_salt_water").structureId("mm:electrolyzer")
        .ticks(400)
        .input({type: "mm:input/consume", ingredient: { type: "mm:fluid", fluid: "tfc:salt_water", amount: 2000}})
        .output({type: "mm:output/simple", ingredient: { type: "mm:fluid", fluid: "mekanism:chlorine", amount: 1000}})
        .output({type: "mm:output/simple", ingredient: { type: "mm:item", item: "shb2:sodium_hydroxide", count: 1}})
        .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:energy", amount: 50}})

    event.create("mm:electrolyze_river_water").structureId("mm:electrolyzer")
        .ticks(200)
        .input({type: "mm:input/consume", ingredient: { type: "mm:fluid", fluid: "tfc:river_water", amount: 3000}})
        .output({type: "mm:output/simple", ingredient: { type: "mm:fluid", fluid: "mekanism:hydrogen", amount: 2000}})
        .output({type: "mm:output/simple", ingredient: { type: "mm:fluid", fluid: "mekanism:oxygen", amount: 1000}})
        .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:energy", amount: 50}})
        
    event.create("mm:electrolyze_water").structureId("mm:electrolyzer")
        .ticks(200)
        .input({type: "mm:input/consume", ingredient: { type: "mm:fluid", fluid: "minecraft:water", amount: 3000}})
        .output({type: "mm:output/simple", ingredient: { type: "mm:fluid", fluid: "mekanism:hydrogen", amount: 2000}})
        .output({type: "mm:output/simple", ingredient: { type: "mm:fluid", fluid: "mekanism:oxygen", amount: 1000}})
        .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:energy", amount: 50}})
        
    event.create("mm:electrolyze_alumina").structureId("mm:electrolyzer")
        .ticks(600)
        .input({type: "mm:input/consume", ingredient: { type: "mm:fluid", fluid: "shb2:alumina_solution", amount: 1000}})
        .output({type: "mm:output/simple", ingredient: { type: "mm:fluid", fluid: "tfc_ie_addon:metal/aluminum", amount: 100}})
        .output({type: "mm:output/simple", ingredient: { type: "mm:fluid", fluid: "mekanism:oxygen", amount: 900}})
        .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:energy", amount: 200}})
        
    event.create("mm:electrolyze_hydrochloric_acid").structureId("mm:electrolyzer")
        .ticks(300)
        .input({type: "mm:input/consume", ingredient: { type: "mm:fluid", fluid: "shb2:hydrochloric_acid", amount: 2000}})
        .output({type: "mm:output/simple", ingredient: { type: "mm:fluid", fluid: "shb2:hypochlorous_acid_water", amount: 1000}})
        .output({type: "mm:output/simple", ingredient: { type: "mm:fluid", fluid: "minecraft:water", amount: 1000}})
        .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:energy", amount: 50}})

    // Arc Melter
    MeltingOres.forEach((ore) => {
        event.create(`mm:melt_${ore[0]}_ore`).structureId("mm:arc_melter")
            .ticks(600)
            .input({type: "mm:input/consume", ingredient: { type: "mm:item", item: `tfc:powder/${ore[0]}`, count: 15}})
            .output({type: "mm:output/simple", ingredient: { type: "mm:fluid", fluid: `tfc:metal/${ore[1]}`, amount: 100}})
            .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:fluid", fluid: "mekanism:oxygen", amount: 1}})
            .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:energy", amount: 100}})
        event.create('mm:melt_andesite').structureId("mm:arc_melter")
            .ticks(600)
            .input({type: "mm:input/consume", ingredient: { type: "mm:item", item: 'tfc:rock/cobble/andesite', count: 1}})
            .output({type: "mm:output/simple", ingredient: { type: "mm:fluid", fluid: 'shb2:andesitic_lava', amount: 200}})
            .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:fluid", fluid: "mekanism:oxygen", amount: 1}})
            .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:energy", amount: 100}})
        event.create('mm:melt_galena_ore').structureId("mm:arc_melter")
            .ticks(600)
            .input({type: "mm:input/consume", ingredient: { type: "mm:item", item: 'tfc_ie_addon:powder/galena', count: 15}})
            .output({type: "mm:output/simple", ingredient: { type: "mm:fluid", fluid: 'tfc_ie_addon:metal/lead', amount: 100}})
            .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:fluid", fluid: "mekanism:oxygen", amount: 1}})
            .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:energy", amount: 100}})
        event.create('mm:melt_uraninite_ore').structureId("mm:arc_melter")
            .ticks(600)
            .input({type: "mm:input/consume", ingredient: { type: "mm:item", item: 'tfc_ie_addon:powder/uraninite', count: 15}})
            .output({type: "mm:output/simple", ingredient: { type: "mm:fluid", fluid: 'tfc_ie_addon:metal/uranium', amount: 100}})
            .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:fluid", fluid: "mekanism:oxygen", amount: 1}})
            .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:energy", amount: 100}})
        event.create('mm:melt_small_chromite_ore').structureId("mm:arc_melter")
            .ticks(1200)
            .input({type: "mm:input/consume", ingredient: { type: "mm:item", item: 'firmalife:ore/small_chromite', count: 15}})
            .output({type: "mm:output/simple", ingredient: { type: "mm:fluid", fluid: 'firmalife:metal/chromium', amount: 200}})
            .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:fluid", fluid: "mekanism:oxygen", amount: 1}})
            .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:energy", amount: 100}})
        event.create('mm:melt_poor_chromite_ore').structureId("mm:arc_melter")
            .ticks(600)
            .input({type: "mm:input/consume", ingredient: { type: "mm:item", item: 'firmalife:ore/poor_chromite', count: 5}})
            .output({type: "mm:output/simple", ingredient: { type: "mm:fluid", fluid: 'firmalife:metal/chromium', amount: 100}})
            .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:fluid", fluid: "mekanism:oxygen", amount: 1}})
            .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:energy", amount: 100}})
        event.create('mm:melt_normal_chromite_ore').structureId("mm:arc_melter")
            .ticks(600)
            .input({type: "mm:input/consume", ingredient: { type: "mm:item", item: 'firmalife:ore/normal_chromite', count: 3}})
            .output({type: "mm:output/simple", ingredient: { type: "mm:fluid", fluid: 'firmalife:metal/chromium', amount: 100}})
            .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:fluid", fluid: "mekanism:oxygen", amount: 1}})
            .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:energy", amount: 100}})
        event.create('mm:melt_rich_chromite_ore').structureId("mm:arc_melter")
            .ticks(840)
            .input({type: "mm:input/consume", ingredient: { type: "mm:item", item: 'firmalife:ore/rich_chromite', count: 3}})
            .output({type: "mm:output/simple", ingredient: { type: "mm:fluid", fluid: 'firmalife:metal/chromium', amount: 140}})
            .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:fluid", fluid: "mekanism:oxygen", amount: 1}})
            .input({type: "mm:input/consume", per_tick: true, ingredient: { type: "mm:energy", amount: 100}})
    })
})